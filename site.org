#+STARTUP: logdone
#+hugo_base_dir: .
#+title: Morgan Bauer

* Website

"The postings on this site are my own and do not necessarily represent IBM's positions, strategies, or opinions."

** DONE Morgan Bauer's Work Resume
CLOSED: [2021-01-15 Fri 12:50]
:properties:
:export_file_name: 2021-01-15-resume
:end:

Morgan is an Open Source Software (OSS) Engineer for IBM working on Kubernetes. Morgan has extensive experience in the creation of open source software, containerized software development and complex system architecture. Morgan also enjoys working with cross-functional teams, and presenting at conferences and meetups.

*** [[/Morgan-Bauer-OpenSourceEngineer-resume.pdf][CLICK HERE FOR RESUME AS PDF]]

Github: [[https://github.com/MHBauer/][@MHBauer]]

Linkedin: [[https://www.linkedin.com/in/morganbauer/][@morganbauer]]

[[https://developer.ibm.com/profiles/mbauer/][IBM Developer Profile]]

I have a [[/Morgan-Bauer-OpenSourceEngineer-resume.pdf][Resume]] and [[https://www.linkedin.com/in/morganbauer/][linkedin account @morganbauer]].

I enjoy working in open source software communities. My most recent experience is heavily based in *[[https://golang.org/][golang]]*, but I would like to professionally work with [[https://www.rust-lang.org/][rust]].

I have been fortunate enough to be accepted to speak at many public conferences all over the world, as well as internally within IBM. These presentations have not only been short conference talks, but also multi-hour workshops to deep dive into the open source software I have worked directly on, as well as basic education on developer tooling, such as git & docker.

[[/resume.html][resume as web page]]

*** Conference Talks


**** Kubecon EU 2020

https://kccnceu20.sched.com/event/Zejr/a-journey-through-kubernetes-admission-controller-taxanomy-morgan-bauer-srinivas-brahmaroutu-ibm

https://sched.co/Zejr

https://static.sched.com/hosted_files/kccnceu20/2e/KubeCon_Virtual_2020_admission%20controllers.pdf

https://youtu.be/rPLH1aTeJ5Q

**** Hyperledger Global Forum 2020


Hyperledger Fabric 101 - Swetha Repakula & Morgan Bauer, IBM

https://events19.linuxfoundation.org/events/hyperledger-global-forum-2020/program/agenda/

https://sched.co/Xoew


Join Swetha and Morgan as they provide an introduction to the Hyperledger Fabric Blockchain Platform.
They will step through a high level overview of Fabric architecture and internals.
The introduction will also include an understanding of the project from an open source perspective so attendees are informed of how they can contribute their input, feedback and possibly code to the project.
With that foundation, they will then guide attendees through an hands on experience with the Fabric platform.
The workshop will involve participants standing up their own Fabric network, deploying smart contracts, and interacting with their contracts using decentralized applications.
They will leave the tutorial with a better understanding of the properties of permissioned blockchains, and decentralized application development.

Fabric is a Hyperledger project under the Linux Foundation, and forms the core of the IBM Blockchain Platform, a cloud service that provides an environment to run smart contracts.
Come learn the basics about how blockchains work, and how they are specifically applied in Fabric.

As a workshop, attendees should bring their computer to participate. This workshop requires some command line experience, and is focused on a Unix-like environment.

https://static.sched.com/hosted_files/hgf20/e2/HyperledgerFabric101-HGF2020.pdf



**** ApacheCon NA 2018
Comparisons of Cloud Native Communities 

https://feathercast.apache.org/2018/09/26/comparisons-of-cloud-native-communities-morgan-bauer/



**** Kubecon EU 2018


***** Building a Fault-Tolerant Resources Controller on Kubernetes - Morgan Bauer & Srinivas Brahmaroutu

https://kccnceu18.sched.com/event/DqvS/building-a-fault-tolerant-custom-resources-controller-on-kubernetes-morgan-bauer-srinivas-brahmaroutu-ibm-corp-intermediate-skill-level-slides-attached
https://schd.ws/hosted_files/kccnceu18/3b/CRDDeployments.pdf﻿

***** Building a Fault-Tolerant Resources Controller on Kubernetes - Morgan Bauer & Srinivas Brahmaroutu

https://www.youtube.com/watch?v=v2gAcKKDf9Y


***** SIG Service-Catalog Deep Dive – Doug Davis, Michael Kibbe & Morgan Bauer

https://www.youtube.com/watch?v=knKSSKMkdHY

 SIG Service-Catalog Deep Dive – Doug Davis, Michael Kibbe, Google, & Morgan Bauer, IBM (Intermediate Skill Level) In the "SIG Service-Catalog Intro" session we provided an overview of the Open Service Broker API and the Kubernetes implementation being developed by the Service Catalog SIG. With that background, this session will go into some of the challenges we faced in making it a reality. Whether it was because we were trying to use bleeding edge features of K8s, or trying to align very radically different processing models between K8s and other OSB API Platforms, our SIG has had an interesting time trying to navigate these waters. Come learn about these these challenges and how we've chosen to solve them.

***** Open Service Brokers for the CF Container Runtime - Jonathan Berkhahn & Morgan Bauer, IBM

https://www.youtube.com/watch?v=tK2XIhdiVm4


Open Service Brokers for the CF Container Runtime - Jonathan Berkhahn & Morgan Bauer, IBM

The Open Service Broker API is an open standard based on the Cloud
Foundry service broker model. The Cloud Foundry Container Runtime is
backed by Kubernetes, a container orchestrator. The Kubernetes Service
Catalog project is an implementation of the platform side of the
OSBAPI running as part of Kubernetes. Come learn how to utilize the
same brokers and services you use for applications running on CF for
containers hosted by the new container runtime. We'll briefly cover
the service broker architecture before demoing the set-up and
operation of the Service Catalog on top of the CF Container Runtime
and going over best practices for writing brokers to ensure that they
are multi-platform compatible.

**** CF Summit EU 2018

https://www.youtube.com/watch?v=vMERgcYmzX4
https://sched.co/FRyj

**** CloudFoundry Summit EU 2017

***** Getting a Handle on Your Microservices: Istio and the Open Source Broker API

https://www.cloudfoundry.org/trainings/getting-handle-microservices-istio-open-source-broker-api/

* DONE Digital Developer Conference - Open Source Contributor’s Conference: Become a Kubernetes contributor - Git & Github :conference:digital__conference:
CLOSED: [2020-09-29 Tue 22:31]
:properties:
:export_file_name: ibm-git-and-github
:end:

https://developer.ibm.com/conferences/oscc_become_a_kubernetes_contributor/

https://developer.ibm.com/conferences/oscc_become_a_kubernetes_contributor/git_and_github/

As an aside, the 'IBM Developer' website was previously known as 'IBM DeveloperWorks', which I found to be a useful resource over time, especially during University days.
I am not sure I ever had a goal of being published on DeveloperWorks, but I find it very cool to have achieved it.

* Presentations
:PROPERTIES:
:EXPORT_HUGO_SECTION: Presentations
:END:

I was at the front of the room or assisting the person at the front of the room.

** DONE Open Source Summit China 2019 :conference:blockchain:hyperledger:
CLOSED: [2019-06-26 Wed 11:20]
:properties:
:export_file_name: oss-china-2019
:end:

https://kccncosschn19eng.sched.com/

https://kccncosschn19eng.sched.com/event/NrvR/creating-your-first-smart-contract-on-hyperledger-fabric-swetha-repakula-morgan-bauer-ibm?iframe=no

https://static.sched.com/hosted_files/kccncosschn19eng/67/OSSChina2019.pdf

https://sched.co/NrvR

** DONE Open Source Summit Japan 2019 :conference:blockchain:hyperledger:
CLOSED: [2019-07-19 Fri 11:00]
:properties:
:export_file_name: oss-japan-2019
:end:

When one thinks of blockchain, the technologies that come to mind are Bitcoin, and Ethereum.
Much of the knowledge has been focused on public networks,
and less is known about the permissioned blockchain platforms out there like Hyperledger Fabric.
Fabric is an open source blockchain platform that has been designed for corporate use cases.
Morgan and Swetha will go through the architecture of Hyperledger Fabric detailing the transaction work flow,
consensus mechanism and smart contract capabilities.
Attendees will leave with knowledge about the Hyperledger Consortium as well as details into the Fabric platform.

https://ossalsjp19.sched.com/event/OVt3/hyperledger-fabric-101-permissioned-blockchain-platforms-swetha-repakula-morgan-bauer-ibm?iframe=no&w=100%&sidebar=yes&bg=no

https://sched.co/OVt3

** DONE Open Source Summit North America 2019 :conference:blockchain:hyperledger:
CLOSED: [2019-08-23 Fri 14:25]
:properties:
:export_file_name: oss-na-2019
:end:

Smart contracts are one of the must-have features that most blockchain technologies provide today.
Hyperledger Fabric is a permissioned blockchain platform where people write smart contracts in general purpose programming languages like Go or Javascript.
In comparison, Ethereum invented Contract-Oriented Languages such as Solidity,
and created the web3 JS library to interact with smart contracts.
Progress has been made in the Hyperledger community to incorporate a similar developer experience into Fabric.

This workshop will cover how to run the EVM in Fabric, deploy sample smart contracts and how to use the web3.js library to interact with them via the Fab3 proxy.
In the process attendees will also learn the basics of using Hyperledger Fabric.
Developers familiar with Ethereum can easily migrate their Decentralized Apps (DApps) and are welcome to bring them to use during the workshop.
This version of the workshop will be focused on the Fabric platform in general versus the EVM feature.

https://ossna19.sched.com/event/PUQG/deploy-your-first-dapp-and-solidity-smart-contracts-to-hyperledger-fabric-swetha-repakula-morgan-bauer-ibm?iframe=no&w=100%&sidebar=yes&bg=no

https://sched.co/PUQG

https://static.sched.com/hosted_files/ossna19/e5/HyperledgerFabricOSS2019NA.pdf


* TIL - Today I Learned :TIL:
I want to write down what I've learned so I don't forget and include where I learned it to know what I use as sources.

** DONE OBS Capture Transform Settings
CLOSED: [2021-05-27 Thu 17:47]
:properties:
:export_file_name: reset-obs-transform-capture
:END:

=Sometimes you may see the red dot in the upper left corner of your preview with a game capture source, select the source in your list and press Ctrl+R then Ctrl+f to reset than fit the source to your preview screen.=
from
https://obsproject.com/wiki/Game-Capture-Guide

The keys correspond to "Reset Transform" followed by "Fit to Screen".

** DONE windows explorer cli correspondence
CLOSED: [2021-05-19 Wed]
:properties:
:export_file_name: windows-explorer-cli-correspondence
:END:

found in an old hn post while cleaning up tabs

can type cmd in explorer location bar and it will launch a console in the same location.

while in a console can type =start .= and it will open explorer in a location

amusing to write this now, as it is from a several moth old hacker news topic. I was cleaning up some tabs.

Source:
https://news.ycombinator.com/item?id=26165237

=Windows has some nice tricks to connect the UI to the cmdline. For instance you can type "cmd" or "powershell" in the breadcrumbs-bar of an Explorer window, and it opens a terminal at that filesystem location (and the other way around, "start ." on the command line opens an Explorer window in the current directory.=
from https://news.ycombinator.com/user?id=flohofwoe

Thank you.


** DONE Nikon exif field for memory card
CLOSED: [2018-01-04 Thu]
:properties:
:export_file_name: nikon-exif-field-for-slot
:end:

I learned this from owning a Nikon D500 and trying to figure out why the checksums of files on the SD Card and XQD card don't match.

On a D500, which has two card slots, an XQD and an SD, this data is recorded in the file under the exif field 'Memory Card Number'.

=0= is the value for the XQD Card slot.
=1= is the value for the SD Card slot.

[[https://photo.stackexchange.com/q/98778/87152][relevant stackoverflow link]]

** DONE ext4 defragmenting & pacman package caching
CLOSED: [2021-01-01 Fri]

*** defrag
e4defrag -c
to check the amount of fragmentation
-v for verbose details of each file.

When run without -c it will perform the defragmentation.


*** pacman cache
not sure if pacman doesn't clean up, or what, but paccache -r from pacman-contrib.

*** a thing I knew

ext4 fs reserves 5% of free space for root, which on a large disk is hundreds of gigabytes.
tune with `tune2fs -m 1 /dev/sda1` etc. it does take fractional decimal points.


** <2020-08-02 Sun 17:00>
https://checkip.amazonaws.com/
** download and import a github user gpg key
little script to pull a gpg key and import it


curl -sSL 'https://api.github.com/users/${GITHUB_USER}/gpg_keys' | jq '.[0].raw_key' -r | gpg --import


-o PasswordAuthentication=no

can get ssh keys from github, shows public key md5 fingerprint. modern ssh uses sha256 fingerprints

ssh-keygen -l -E md5 -f uvm.pub

.ssh curl -sSL https://api.github.com/users/mhbauer/keys | jq '.[0].key' -r | ssh-keygen -l -E md5 -f -
256 MD5:2e:e1:9f:bc:bf:e4:ae:b0:10:8a:27:b5:9b:63:34:e7 no comment (ED25519)

the contents of this can be used by ssh-import-id to prime accounts

*** TODO 
 - github v3 implicitly 
 - figure out github v4 api
 - something other than jq and shell piping

** DONE how to run containerd as runtime for e2e-node tests      :kubernetes:
CLOSED: [2020-06-04 Thu 11:59]
:properties:
:export_file_name: 2020-05-28-kubernetes-e2e-tests-dockerless-cri
:end:

requires some extra setup to get containerd working, such as setting it up to accept being a cri, which is a plugin, as well as cni which is all installable from the containerd repo using scripts that are available inside.

: GOFLAGS='-v -tags=dockerless' make test-e2e-node PARALLELISM=1 TEST_ARGS='--kubelet-flags=--fail-swap-on=false' FOCUS="NodeFeature: ImageID" SKIP="\[Flaky\]|\[Serial\]" RUNTIME=remote CONTAINER_RUNTIME_ENDPOINT=unix:///run/containerd/containerd.sock

** TODO 2020-06-02 kubernetes ci job types

 some stuff I knew before, but I want to write it down and link to some of it


 Terminology question, presubmit = pull- job, postsubmit = after push to repo (usually merge PR), periodics = ci- job? Are there any other jobs as 

** DONE fail-swap-on necessary for running e2e tests locally     :kubernetes:
CLOSED: [2020-05-28 Thu 11:59]
:properties:
:export_file_name: 2020-05-28-kubernetes-e2e-tests-locally
:end:

If you're trying to run #kubernetes e2e-node tests with ~make test-e2e-node~ and you're trying to run them locally, you may need to add ~TEST_ARG='--kubelet-flags=--fail-swap-on=false'~ because your normal everyday dev machine probably has swap enabled.

** TODO 2020-05-18                                                    :emacs:
very productive day
*** `keep-lines` and `flush-lines` in emacs 

 by searching for `emacs select lines matching regex`

 and finding

 https://stackoverflow.com/questions/4214949/emacs-removing-all-lines-that-dont-match

 and the most useful part, reproduced below https://stackoverflow.com/questions/4214949/emacs-removing-all-lines-that-dont-match#comment4574108_4215809

 The documentation for delete-non-matching-lines explains this is an alias for keep-lines and delete-matching-lines is an alias for flush-lines
 
*** pngs can be optimized with zopfli

** TODO 2020-05-12
Put contact information, keywords, and page numbers on slides.

I've learned this previously, but I'm writing it down, because it happened to me again relatively recently.

It is almost certain that people will see a single slide out of context and now know how to get more information from you.

keywords help with context, date helps with knowing the version of a presentation, contact info helps with reaching out, page numbers helps if there are repeats, and also again with versioning.
** TODO 2020-05-07                                                      :dns:
A & AAAA records are IP addresses

CNAME is an alias to another domain name.
** DONE kubernetes github organization code search               :kubernetes:
CLOSED: [2020-05-11 Mon 11:57]
:properties:
:export_file_name: 2020-05-11-k8s-codesearch
:end:

cs.k8s.io is super useful to correlate things and search the entire kubernetes + kubernetes-sigs organizations.

** TODO Org to Netlify in One Step :emacs:

Since Netlify provides emacs in their [[https://github.com/netlify/build-image][build-image]], we can call emacs
during our build step. We can use emacs to render to markdown with
[[https://ox-hugo.scripter.co/][ox-hugo]]. After we have the markdown, we can render that with
[[https://gohugo.io/][hugo]]. This can all be done server-side, so the rendered markdown does
not have to be committed to the repo.

urn:uuid:6f953af9-e7a3-4935-b9db-06bdd829353c

** TODO Open source contributions

It's a cycle. How do you know what to read? Other people said
stuff. How did other people know to read your stuff? You said stuff!
It sounds kind of slimey to be shilling your own stuff, but it's not,
because everyone is busy with their own stuff. They are also generally
good people and WANT to look at your stuff. They need a reminder at
times.


** Why are we here?

I am here to work on Docker.


** TODO ffmpeg multiple video filters

ffmpeg has a many options and flags. I look them up and can never remember.

When dealing with video filters, do not use multiple instances of the
flag, but separate filters by commas.
 
May need to quote the entire filter string?

ffmpeg -i input.mp4 -filter:v fps=fps=30, scale=1920:-2 output.mp4

and NOT
`ffmpeg -i input.mp4 -filter:v fps=fps=30 -filter:v scale=1920:-2 output.mp4`

** DONE Set default flags in magit commit screen
CLOSED: [2019-04-11 Thu 21:46:38]
:properties:
:export_file_name: magit-default-flags
:end:

see my stackoverflow answer, reproduced below
https://emacs.stackexchange.com/questions/3893/how-can-i-make-verbose-flag-be-enabled-by-default-in-magit-commit-screen

In the versions of magit that use transient (after February 2019 or so), set the flag, and then save while still in the transient buffer.

So for commit, the key sequence would be something like

C-x g # start magit
s # to stage changes
c # start commiting
-v # enable verbose
C-x C-s # Save the setting persistently across sessions
c # do the actual commit

After that, next time commit is invoked, verbose will still be set. (You do not have to complete the commit, and can exit after saving with C-x C-s.)

The actual default is saved in a transient/ directory in .emacs.d/.

See the transient manual https://magit.vc/manual/transient.html#Saving-Values

* stuff I did

** TODO Denver Block chain Week <2019-09-30 Mon>--<2019-10-03 Thu>
https://www.eventbrite.com/e/kickoff-to-denver-blockchain-week-at-cu-tickets-73003227619#
https://denverblockchainweek.com/
https://www.eventbrite.com/e/hyperledger-fabric-bootcamp-tickets-71933845067#
https://www.eventbrite.com/e/a-lign-denver-blockchain-week-event-tickets-71952555029#
https://globalblockchainsummit.com/ Oct 3&4 only went the one day, I'm pretty sure. Some kind of funky cocktail.

** TODO Truffle Con 2019
:properties:
:export_file_name: trufflecon2019
:end:

https://www.youtube.com/watch?v=YWjVRXeqf1g

#+begin_export html

<video width="1920" height="1080" controls>
  <source src="https://s3.us.cloud-object-storage.appdomain.cloud/mhbucket/trufflecon-demo.mp4" type="video/mp4">
</video>

#+end_export



* Footnotes
​* COMMENT Local Variables                          :ARCHIVE:
# Local Variables:
# eval: (org-hugo-auto-export-mode)
# End:

# (cl-random most-positive-fixnum)
# (random most-positive-fixnum)
